name: Deploy to Vercel

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

permissions:
  pull-requests: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm add vercel

      - name: Get Vercel Environment Variables
        run: pnpm vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          echo "🔧 Vercel 빌드 실행"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "🛠️ Production 빌드 (main)"
            pnpm vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            echo "🛠️ Preview 빌드 (dev 또는 PR)"
            pnpm vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Deploy Project Artifacts to Vercel
        id: vercel_deploy
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Branch: ${{ github.ref }}"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "🔍 PR 배포 (Preview)"
            pnpm vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --yes > vercel-output.txt
            echo "preview_url=$(cat vercel-output.txt)" >> $GITHUB_OUTPUT

          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "🚧 Dev 브랜치 배포 (Preview)"
            pnpm vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --yes

          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "🚀 Main 브랜치 배포 (Prod)"
            pnpm vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --yes --prod

          else
            echo "❌ 해당 브랜치 배포 조건 아님"
          fi

      - name: Comment Preview URL on PR
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          message: |
            ### 🔍 Vercel Preview Deployment

            🔗 [Click here to view the preview deployment](${{ steps.vercel_deploy.outputs.preview_url }})

            > Preview deployed automatically by GitHub Actions + Vercel 🚀
